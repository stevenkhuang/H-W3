
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class BSTvsAVL {

	public static void main( String [ ] args )
	{
		int[] N;
		int k = 100000;
		N= new int[4];
		N[0]=1000;
		N[1]=10000;
		N[2]=100000;
		N[3]=1000000;
		

		ArrayList<Integer> numbers = new ArrayList<Integer>();
		for(int i = 0; i < 1000000; i++)
		{
			numbers.add(i);
		}
		ArrayList<Integer> numbers2 = new ArrayList<Integer>(numbers);

		Collections.shuffle(numbers);//arraylist for insertions
		Collections.shuffle(numbers2);//arraylist for searching
		int a;
		System.out.println("BST Tree Test");
		for(a=0; a<4;a++)
		{
			BinarySearchTree bst = new BinarySearchTree();
			System.out.println( N[a] +" values");
			
			long startTime = System.currentTimeMillis();//insertion loop
			for(int i =0; i<N[a];i++)
			{	
				bst.add(numbers.get(i));		
			}
			long endTime = System.currentTimeMillis();
			long duration = (endTime - startTime); 
			
			long startTime1 = System.currentTimeMillis();//searching loop
			for(int i =0; i<N[a];i++)
			{	
				bst.find(numbers2.get(i));		
			}
			long endTime1 = System.currentTimeMillis();
			long duration1 = (endTime1 - startTime1); 
			
			System.out.println("Insertion duration: "+duration+ " ms");
			System.out.println("Searching duration: "+duration1+ " ms");

		}
		System.out.println("\nAVL Tree Test");
		for(a=0; a<4;a++)
		{
			AVLT avlt = new AVLT();
			System.out.println( N[a] +" values");
			
			long startTime = System.currentTimeMillis();//insertion loop
			for(int i =0; i<N[a];i++)
			{			
				avlt.insert(numbers.get(i));
			}
			long endTime = System.currentTimeMillis();
			long duration = (endTime - startTime); 
			
			long startTime1 = System.currentTimeMillis();//searching loop
			for(int i =0; i<N[a];i++)
			{	
				avlt.contains(numbers2.get(i));		
			}
			long endTime1 = System.currentTimeMillis();
			long duration1 = (endTime1 - startTime1); 
			
			System.out.println("Insertion duration: "+duration+ " ms");
			System.out.println("Searching duration: "+duration1+ " ms");

		}

	}
}
